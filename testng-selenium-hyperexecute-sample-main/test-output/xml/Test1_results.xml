<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Test_1"
           tests="6"
           failures="1"
           errors="0"
           skipped="5"
           time="1.485">
  <properties />
            <testcase name="testSetUp" time="1.485" classname="Test1">
                <failure type="org.openqa.selenium.WebDriverException"
                  message="Unauthorized, either Username or AccessKey is invalid. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.14 seconds
Build info: version: &apos;3.141.59&apos;, revision: &apos;e82be7d358&apos;, time: &apos;2018-11-14T08:17:03&apos;
System info: host: &apos;ASPLAPNAV570&apos;, ip: &apos;172.24.197.70&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;11.0.13&apos;
Driver info: driver.version: RemoteWebDriver"
              >
<![CDATA[org.openqa.selenium.WebDriverException: Unauthorized, either Username or AccessKey is invalid. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.14 seconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ASPLAPNAV570', ip: '172.24.197.70', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.13'
Driver info: driver.version: RemoteWebDriver
  java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
  java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
  java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
  java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
  org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
  org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
  org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54)
  org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
  org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
  java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
  java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
  java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)
  java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)
  java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)
  java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
  java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
  java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
  java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)
  org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
  org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
  org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
  org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
  org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
  org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
  org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
  Test1.testSetUp(Test1.java:44)
  java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.base/java.lang.reflect.Method.invoke(Method.java:566)
  org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
  org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
  org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
  org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
  org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
  org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:589)
  org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
  org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
  org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
  org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
  org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
  org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
  java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
  java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
  java.base/java.lang.Thread.run(Thread.java:834)
]]>
      </failure>

          </testcase>
  
            <testcase name="tearDown" time="0.0" classname="Test1">
          <skipped />
    </testcase>
            <testcase name="testSetUp" time="0.0" classname="Test1">
          <skipped />
    </testcase>
            <testcase name="tearDown" time="0.0" classname="Test1">
          <skipped />
    </testcase>
            <testcase name="test1_element_addition_1" time="0.0" classname="Test1">
          <skipped />
    </testcase>
            <testcase name="test1_element_addition_2" time="0.0" classname="Test1">
          <skipped />
    </testcase>
  
  
</testsuite>
